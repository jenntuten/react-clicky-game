{"version":3,"sources":["components/TVCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Score/index.js","components/Status/index.js","components/Instructions/index.js","App.js","index.js"],"names":["TVCard","props","react_default","a","createElement","className","onClick","shuffling","id","alt","name","src","image","Wrapper","children","Title","Score","Status","Instructions","App","state","cards","score","clickedCards","message","_this","userScore","console","log","includes","setState","push","i","length","j","Math","floor","random","_ref","shuffle","reset","_this2","this","components_Wrapper","components_Title","components_Instructions","components_Score","components_Status","map","friend","components_TVCard","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"i3DAqBeA,MAlBf,SAAgBC,GACd,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAML,EAAMM,UAAUN,EAAMO,MACzDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,SAEjCV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACCH,EAAMS,gBCLFG,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,iBCG1BC,MAJf,SAAed,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMa,iBCGvBE,MAJf,SAAef,GACX,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMa,iBCGzBG,MAJf,SAAgBhB,GACZ,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUJ,EAAMa,iBCG1BI,MAJf,SAAsBjB,GAClB,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,sEC+EIc,6MA/DbC,MAAQ,CACNC,QACAC,MAAO,EACPC,aAAc,GACdC,QAAS,MAGXjB,UAAY,SAAAC,GAGV,IAAIe,EAAeE,EAAKL,MAAMG,aAC1BG,EAAYD,EAAKL,MAAME,MAC3BK,QAAQC,IAAIF,GACRH,EAAaM,SAASrB,GACxBiB,EAAKK,SAAS,CAAEP,aAAc,GAAID,MAAO,EAAGE,QAAS,qCAGrC,IAAdE,EACFD,EAAKK,SAAS,CAAEP,aAAc,GAAID,MAAO,EAAGE,QAAS,cAGrDD,EAAaQ,KAAKvB,GAhCxB,WAGE,IAAK,IAAIwB,EAAIX,EAAMY,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADDM,EAElB,CAACjB,EAAMa,GAAIb,EAAMW,IAAvCX,EAAMW,GAFkCM,EAAA,GAE9BjB,EAAMa,GAFwBI,EAAA,IA8BvCC,GACAd,EAAKK,SAAS,CACZT,MAAOA,EACPC,MAAOI,EAAU,QAKvBc,MAAQ,WACNf,EAAKK,SACH,CACET,QACAC,MAAO,EACPC,aAAc,GACdC,QAAS,8EAMN,IAAAiB,EAAAC,KACP,OACExC,EAAAC,EAAAC,cAACuC,EAAD,KACEzC,EAAAC,EAAAC,cAACwC,EAAD,0BACA1C,EAAAC,EAAAC,cAACyC,EAAD,MACA3C,EAAAC,EAAAC,cAAA,UAAQE,QAASoC,KAAKF,OAAtB,SACAtC,EAAAC,EAAAC,cAAC0C,EAAD,eAAeJ,KAAKtB,MAAME,OAC1BpB,EAAAC,EAAAC,cAAC2C,EAAD,KAASL,KAAKtB,MAAMI,SACnBkB,KAAKtB,MAAMC,MAAM2B,IAAI,SAAAC,GAAM,OAC1B/C,EAAAC,EAAAC,cAAC8C,EAAD,CACE3C,UAAWkC,EAAKlC,UAChBC,GAAIyC,EAAOzC,GACXE,KAAMuC,EAAOvC,KACbE,MAAOqC,EAAOrC,kBAzDRuC,mBCblBC,IAASC,OAAOnD,EAAAC,EAAAC,cAACkD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.e39fda02.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n//<img alt={props.name} src={props.image} />\nfunction TVCard(props) {\n  return (\n    <div className=\"card\" onClick={() => props.shuffling(props.id)}>\n      <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n          {props.name}\n          </li>\n        </ul>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default TVCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Score(props) {\r\n    return <h2 className=\"score\">{props.children}</h2>;\r\n  }\r\n\r\nexport default Score;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Status(props) {\r\n    return <h2 className=\"status\">{props.children}</h2>;\r\n  }\r\n\r\nexport default Status;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Instructions(props) {\r\n    return <h3 className=\"instructions\">Test your memory - don't click on the same show twice!</h3>;\r\n  }\r\n\r\nexport default Instructions;","import React, { Component } from \"react\";\nimport TVCard from \"./components/TVCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Score from \"./components/Score\";\nimport Status from \"./components/Status\";\nimport Instructions from \"./components/Instructions\";\nimport cards from \"./cards.json\";\n\nfunction shuffle() {\n  //console.log('shuffling...')\n  //Durstenfeld Shuffle Algorithm to rearrange cards\n  for (let i = cards.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [cards[i], cards[j]] = [cards[j], cards[i]];\n  }\n}\n\nclass App extends Component {\n  // Setting this.state.cards to the cards json array\n  state = {\n    cards,\n    score: 0,\n    clickedCards: [],\n    message: \"\"\n  };\n\n  shuffling = id => {\n    //console.log(\"clicked cards\",this.state.clickedCards)\n    //console.log(\"score\",this.state.score)\n    let clickedCards = this.state.clickedCards;\n    let userScore = this.state.score\n    console.log(userScore)\n    if (clickedCards.includes(id)) {\n      this.setState({ clickedCards: [], score: 0, message: \"You've already chosen this show!\" });\n      return;\n    }\n    if (userScore === 9) {\n      this.setState({ clickedCards: [], score: 0, message: \"You win!\" })\n    }\n    else {\n      clickedCards.push(id);\n      shuffle();\n      this.setState({\n        cards: cards,\n        score: userScore+1\n      })\n    }\n  };\n  \n  reset = () => {\n    this.setState(\n      {\n        cards,\n        score: 0,\n        clickedCards: [],\n        message: \"\"\n      }\n    )\n  }\n\n  // Map over this.state.cards and render a TVCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>React Clicky Game</Title>\n        <Instructions />\n        <button onClick={this.reset}>Reset</button>\n        <Score>Score: {this.state.score}</Score>\n        <Status>{this.state.message}</Status>\n        {this.state.cards.map(friend => (\n          <TVCard\n            shuffling={this.shuffling}\n            id={friend.id}\n            name={friend.name}\n            image={friend.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}